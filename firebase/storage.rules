rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isSuperAdmin() {
      return isAuthenticated() && 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'super_admin';
    }
    
    function isClubAdmin(clubId) {
      return isAuthenticated() && 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'club_admin' &&
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.clubId == clubId;
    }
    
    function isCoach(teamId) {
      return isAuthenticated() && 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'coach' &&
        teamId in firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.teamIds;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidImage() {
      return request.resource.contentType.matches('image/.*') &&
             request.resource.size < 10 * 1024 * 1024; // 10MB limit
    }
    
    function isValidDocument() {
      return request.resource.contentType.matches('application/pdf') ||
             request.resource.contentType.matches('application/msword') ||
             request.resource.contentType.matches('application/vnd.openxmlformats-officedocument.wordprocessingml.document') &&
             request.resource.size < 50 * 1024 * 1024; // 50MB limit
    }
    
    function isValidVideo() {
      return request.resource.contentType.matches('video/.*') &&
             request.resource.size < 100 * 1024 * 1024; // 100MB limit
    }

    // User profile images
    match /users/{userId}/profile/{fileName} {
      allow read: if true; // Public read for profile images
      allow write: if isAuthenticated() && (isOwner(userId) || isSuperAdmin());
    }

    // Club logos and images
    match /clubs/{clubId}/images/{fileName} {
      allow read: if true; // Public read for club images
      allow write: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(clubId)) && isValidImage();
    }

    // Team logos and images
    match /teams/{teamId}/images/{fileName} {
      allow read: if true; // Public read for team images
      allow write: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId) || isCoach(teamId)) && isValidImage();
    }

    // Player photos
    match /players/{playerId}/photos/{fileName} {
      allow read: if isAuthenticated(); // Only authenticated users can view player photos
      allow write: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId) || isCoach(resource.data.teamId) || isOwner(resource.data.userId)) && isValidImage();
    }

    // Event media (photos, videos, documents)
    match /events/{eventId}/media/{fileName} {
      allow read: if isAuthenticated(); // Only authenticated users can view event media
      allow write: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId) || isCoach(resource.data.teamIds) || isReferee()) && 
        (isValidImage() || isValidDocument() || isValidVideo());
    }

    // Tournament media
    match /tournaments/{tournamentId}/media/{fileName} {
      allow read: if true; // Public read for tournament media
      allow write: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId)) && 
        (isValidImage() || isValidDocument() || isValidVideo());
    }

    // Message attachments
    match /messages/{messageId}/attachments/{fileName} {
      allow read: if isAuthenticated() && (
        isSuperAdmin() || 
        request.auth.uid in resource.data.recipientIds ||
        request.auth.uid == resource.data.senderId
      );
      allow write: if isAuthenticated() && request.auth.uid == resource.data.senderId && 
        (isValidImage() || isValidDocument() || isValidVideo());
    }

    // Registration form attachments
    match /registrations/{registrationId}/attachments/{fileName} {
      allow read: if isAuthenticated() && (
        isSuperAdmin() || 
        isClubAdmin(resource.data.clubId) || 
        isCoach(resource.data.teamId) ||
        isOwner(resource.data.playerId)
      );
      allow write: if isAuthenticated() && isOwner(resource.data.playerId) && 
        (isValidImage() || isValidDocument());
    }

    // Custom form attachments
    match /forms/{formId}/submissions/{submissionId}/attachments/{fileName} {
      allow read: if isAuthenticated() && (
        isSuperAdmin() || 
        isClubAdmin(resource.data.clubId) || 
        isOwner(resource.data.userId)
      );
      allow write: if isAuthenticated() && isOwner(resource.data.userId) && 
        (isValidImage() || isValidDocument());
    }

    // Waiver documents
    match /waivers/{waiverId}/documents/{fileName} {
      allow read: if isAuthenticated() && (
        isSuperAdmin() || 
        isClubAdmin(resource.data.clubId) || 
        isOwner(resource.data.userId)
      );
      allow write: if isAuthenticated() && isOwner(resource.data.userId) && isValidDocument();
    }

    // General documents
    match /documents/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId)) && isValidDocument();
    }

    // Temporary uploads (for processing)
    match /temp/{userId}/{fileName} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow write: if isAuthenticated() && isOwner(userId) && 
        (isValidImage() || isValidDocument() || isValidVideo());
      allow delete: if isAuthenticated() && isOwner(userId);
    }
  }
} 