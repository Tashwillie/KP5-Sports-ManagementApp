rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isSuperAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'super_admin';
    }
    
    function isClubAdmin(clubId) {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'club_admin' &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.clubId == clubId;
    }
    
    function isCoach(teamId) {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'coach' &&
        teamId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teamIds;
    }
    
    function isPlayer(teamId) {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'player' &&
        teamId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teamIds;
    }
    
    function isParent(playerId) {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'parent' &&
        exists(/databases/$(database)/documents/players/$(playerId)) &&
        get(/databases/$(database)/documents/players/$(playerId)).data.userId == request.auth.uid;
    }
    
    function isReferee() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'referee';
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isTeamMember(teamId) {
      return isCoach(teamId) || isPlayer(teamId);
    }
    
    function isClubMember(clubId) {
      return isClubAdmin(clubId) || 
        exists(/databases/$(database)/documents/teams) &&
        resource.data.clubId == clubId &&
        isTeamMember(resource.id);
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && (isOwner(userId) || isSuperAdmin() || isClubAdmin(resource.data.clubId));
      allow create: if isAuthenticated() && (isSuperAdmin() || isOwner(userId));
      allow update: if isAuthenticated() && (isSuperAdmin() || isOwner(userId) || isClubAdmin(resource.data.clubId));
      allow delete: if isSuperAdmin();
    }

    // Clubs collection
    match /clubs/{clubId} {
      allow read: if true; // Public read for club information
      allow create: if isAuthenticated() && (isSuperAdmin() || request.auth.token.email_verified == true);
      allow update: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(clubId));
      allow delete: if isSuperAdmin();
    }

    // Teams collection
    match /teams/{teamId} {
      allow read: if true; // Public read for team information
      allow create: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId));
      allow update: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId) || isCoach(teamId));
      allow delete: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId));
    }

    // Players collection
    match /players/{playerId} {
      allow read: if isAuthenticated() && (
        isSuperAdmin() || 
        isClubAdmin(resource.data.clubId) || 
        isCoach(resource.data.teamId) || 
        isPlayer(resource.data.teamId) || 
        isParent(playerId) ||
        isOwner(resource.data.userId)
      );
      allow create: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId) || isCoach(resource.data.teamId));
      allow update: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId) || isCoach(resource.data.teamId) || isOwner(resource.data.userId));
      allow delete: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId));
    }

    // Events collection
    match /events/{eventId} {
      allow read: if isAuthenticated() && (
        isSuperAdmin() || 
        isClubAdmin(resource.data.clubId) || 
        isTeamMember(resource.data.teamIds) ||
        isReferee()
      );
      allow create: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId) || isCoach(resource.data.teamIds) || isReferee());
      allow update: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId) || isCoach(resource.data.teamIds) || isReferee());
      allow delete: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId));
    }

    // Tournaments collection
    match /tournaments/{tournamentId} {
      allow read: if true; // Public read for tournament information
      allow create: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId));
      allow update: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId));
      allow delete: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId));
    }

    // Messages collection
    match /messages/{messageId} {
      allow read: if isAuthenticated() && (
        isSuperAdmin() || 
        request.auth.uid in resource.data.recipientIds ||
        request.auth.uid == resource.data.senderId
      );
      allow create: if isAuthenticated() && request.auth.uid == resource.data.senderId;
      allow update: if isAuthenticated() && request.auth.uid == resource.data.senderId;
      allow delete: if isAuthenticated() && (isSuperAdmin() || request.auth.uid == resource.data.senderId);
    }

    // Registrations collection
    match /registrations/{registrationId} {
      allow read: if isAuthenticated() && (
        isSuperAdmin() || 
        isClubAdmin(resource.data.clubId) || 
        isCoach(resource.data.teamId) ||
        isOwner(resource.data.playerId)
      );
      allow create: if isAuthenticated() && (isSuperAdmin() || isOwner(resource.data.playerId));
      allow update: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId) || isCoach(resource.data.teamId));
      allow delete: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId));
    }

    // Payments collection
    match /payments/{paymentId} {
      allow read: if isAuthenticated() && (isSuperAdmin() || isOwner(resource.data.userId));
      allow create: if isAuthenticated() && isOwner(resource.data.userId);
      allow update: if isAuthenticated() && (isSuperAdmin() || isOwner(resource.data.userId));
      allow delete: if isSuperAdmin();
    }

    // Notifications collection
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && (isSuperAdmin() || isOwner(resource.data.userId));
      allow create: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId));
      allow update: if isAuthenticated() && (isSuperAdmin() || isOwner(resource.data.userId));
      allow delete: if isAuthenticated() && (isSuperAdmin() || isOwner(resource.data.userId));
    }

    // Registration Forms collection
    match /registrationForms/{formId} {
      allow read: if true; // Public read for registration forms
      allow create: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId));
      allow update: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId));
      allow delete: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId));
    }

    // Form Submissions collection
    match /formSubmissions/{submissionId} {
      allow read: if isAuthenticated() && (
        isSuperAdmin() || 
        isClubAdmin(resource.data.clubId) || 
        isOwner(resource.data.userId)
      );
      allow create: if isAuthenticated() && isOwner(resource.data.userId);
      allow update: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId));
      allow delete: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId));
    }

    // Waivers collection
    match /waivers/{waiverId} {
      allow read: if isAuthenticated() && (
        isSuperAdmin() || 
        isClubAdmin(resource.data.clubId) || 
        isOwner(resource.data.userId)
      );
      allow create: if isAuthenticated() && isOwner(resource.data.userId);
      allow update: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId));
      allow delete: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId));
    }

    // Live Matches collection
    match /liveMatches/{matchId} {
      allow read: if true; // Public read for match information
      allow create: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId) || isReferee());
      allow update: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId) || isReferee() || resource.data.refereeId == request.auth.uid || resource.data.adminId == request.auth.uid);
      allow delete: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId));
    }

    // Match Events collection
    match /matchEvents/{eventId} {
      allow read: if true; // Public read for match events
      allow create: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId) || isReferee() || resource.data.refereeId == request.auth.uid || resource.data.adminId == request.auth.uid);
      allow update: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId) || isReferee() || resource.data.refereeId == request.auth.uid || resource.data.adminId == request.auth.uid);
      allow delete: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId));
    }

    // Player Match Stats collection
    match /playerMatchStats/{statId} {
      allow read: if isAuthenticated() && (
        isSuperAdmin() || 
        isClubAdmin(resource.data.clubId) || 
        isCoach(resource.data.teamId) || 
        isOwner(resource.data.playerId)
      );
      allow create: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId) || isReferee());
      allow update: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId) || isReferee());
      allow delete: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId));
    }

    // Team Season Stats collection
    match /teamSeasonStats/{statId} {
      allow read: if true; // Public read for team stats
      allow create: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId));
      allow update: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId));
      allow delete: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId));
    }

    // Custom Forms collection
    match /customForms/{formId} {
      allow read: if isAuthenticated() && (
        isSuperAdmin() || 
        isClubAdmin(resource.data.clubId) || 
        isOwner(resource.data.createdBy)
      );
      allow create: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId));
      allow update: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId) || isOwner(resource.data.createdBy));
      allow delete: if isAuthenticated() && (isSuperAdmin() || isClubAdmin(resource.data.clubId) || isOwner(resource.data.createdBy));
    }
  }
} 